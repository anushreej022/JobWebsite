{"ast":null,"code":"var _jsxFileName = \"/Users/anushree_j/Desktop/Web-D Assignments/JobWebsite/src/pages/CompanyShowcase.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyShowcase = () => {\n  _s();\n  const [companyImages, setCompanyImages] = useState([]);\n  useEffect(() => {\n    // Fetch company images from the backend\n    axios.get(\"http://your-backend-api.com/company/images\").then(response => {\n      setCompanyImages(response.data); // Assuming response.data is an array of company image objects\n    }).catch(error => {\n      console.error(\"Error fetching company images:\", error);\n    });\n  }, []); // Fetch images only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Company Showcase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery\",\n      children: companyImages.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.url,\n          alt: image.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: image.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, image.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyShowcase, \"AeUJVpOHndEf20IdkdsKu2M0MhY=\");\n_c = CompanyShowcase;\nexport default CompanyShowcase;\nvar _c;\n$RefreshReg$(_c, \"CompanyShowcase\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CompanyShowcase","_s","companyImages","setCompanyImages","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","image","src","url","alt","name","id","_c","$RefreshReg$"],"sources":["/Users/anushree_j/Desktop/Web-D Assignments/JobWebsite/src/pages/CompanyShowcase.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst CompanyShowcase = () => {\n  const [companyImages, setCompanyImages] = useState([]);\n\n  useEffect(() => {\n    // Fetch company images from the backend\n    axios.get(\"http://your-backend-api.com/company/images\")\n      .then(response => {\n        setCompanyImages(response.data); // Assuming response.data is an array of company image objects\n      })\n      .catch(error => {\n        console.error(\"Error fetching company images:\", error);\n      });\n  }, []); // Fetch images only once when the component mounts\n\n  return (\n    <div>\n      <h2>Company Showcase</h2>\n      <div className=\"gallery\">\n        {companyImages.map(image => (\n          <div key={image.id} className=\"gallery-item\">\n            <img src={image.url} alt={image.name} />\n            <p>{image.name}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CompanyShowcase;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACO,GAAG,CAAC,4CAA4C,CAAC,CACpDC,IAAI,CAACC,QAAQ,IAAI;MAChBH,gBAAgB,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEV,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBhB,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAL,QAAA,EACrBT,aAAa,CAACe,GAAG,CAACC,KAAK,iBACtBnB,OAAA;QAAoBiB,SAAS,EAAC,cAAc;QAAAL,QAAA,gBAC1CZ,OAAA;UAAKoB,GAAG,EAAED,KAAK,CAACE,GAAI;UAACC,GAAG,EAAEH,KAAK,CAACI;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxChB,OAAA;UAAAY,QAAA,EAAIO,KAAK,CAACI;QAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFXG,KAAK,CAACK,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CA3BID,eAAe;AAAAwB,EAAA,GAAfxB,eAAe;AA6BrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}