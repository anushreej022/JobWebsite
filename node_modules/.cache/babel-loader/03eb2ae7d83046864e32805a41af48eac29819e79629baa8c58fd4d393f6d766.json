{"ast":null,"code":"var _jsxFileName = \"/Users/anushree_j/Desktop/Web-D Assignments/JobWebsite/src/pages/CompanyShowcase.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CompanyShowcase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      companies: []\n    };\n  }\n  componentDidMount() {\n    // Dummy image paths for testing\n    const dummyImagePaths = ['backendImages/1711334451338.jpg', 'backendImages/1711334495090.png' // Add more dummy image paths as needed\n    ];\n\n    // Log dummy image paths\n    console.log(\"Dummy Image Paths:\", dummyImagePaths);\n\n    // Set dummy image paths to state\n    this.setState({\n      companies: dummyImagePaths\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Company Showcase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery\",\n        children: this.state.companies.map((imagePath, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gallery-item\",\n          children: [console.log(\"Rendering Image:\", imagePath), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8080/${imagePath}`,\n            alt: `Company ${index + 1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"company-name\",\n            children: [\"Company \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","CompanyShowcase","constructor","props","state","companies","componentDidMount","dummyImagePaths","console","log","setState","render","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","imagePath","index","src","alt"],"sources":["/Users/anushree_j/Desktop/Web-D Assignments/JobWebsite/src/pages/CompanyShowcase.js"],"sourcesContent":["import React, { Component } from 'react';\n\nexport default class CompanyShowcase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            companies: [],\n        };\n    }\n\n    componentDidMount() {\n        // Dummy image paths for testing\n        const dummyImagePaths = [\n            'backendImages/1711334451338.jpg',\n            'backendImages/1711334495090.png'            // Add more dummy image paths as needed\n        ];\n        \n        // Log dummy image paths\n        console.log(\"Dummy Image Paths:\", dummyImagePaths);\n\n        // Set dummy image paths to state\n        this.setState({ companies: dummyImagePaths });\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Company Showcase</h2>\n                <div className=\"gallery\">\n                    {this.state.companies.map((imagePath, index) => (\n                        <div key={index} className=\"gallery-item\">\n                            {/* Log each image path */}\n                            {console.log(\"Rendering Image:\", imagePath)}\n                            <img src={`http://localhost:8080/${imagePath}`} alt={`Company ${index + 1}`} />\n                            <div className=\"company-name\">Company {index + 1}</div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,MAAMC,eAAe,SAASH,SAAS,CAAC;EACnDI,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,SAAS,EAAE;IACf,CAAC;EACL;EAEAC,iBAAiBA,CAAA,EAAG;IAChB;IACA,MAAMC,eAAe,GAAG,CACpB,iCAAiC,EACjC,iCAAiC,CAAY;IAAA,CAChD;;IAED;IACAC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,eAAe,CAAC;;IAElD;IACA,IAAI,CAACG,QAAQ,CAAC;MAAEL,SAAS,EAAEE;IAAgB,CAAC,CAAC;EACjD;EAEAI,MAAMA,CAAA,EAAG;IACL,oBACIX,OAAA;MAAAY,QAAA,gBACIZ,OAAA;QAAAY,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBhB,OAAA;QAAKiB,SAAS,EAAC,SAAS;QAAAL,QAAA,EACnB,IAAI,CAACR,KAAK,CAACC,SAAS,CAACa,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBACvCpB,OAAA;UAAiBiB,SAAS,EAAC,cAAc;UAAAL,QAAA,GAEpCJ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEU,SAAS,CAAC,eAC3CnB,OAAA;YAAKqB,GAAG,EAAG,yBAAwBF,SAAU,EAAE;YAACG,GAAG,EAAG,WAAUF,KAAK,GAAG,CAAE;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/EhB,OAAA;YAAKiB,SAAS,EAAC,cAAc;YAAAL,QAAA,GAAC,UAAQ,EAACQ,KAAK,GAAG,CAAC;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAJjDI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}