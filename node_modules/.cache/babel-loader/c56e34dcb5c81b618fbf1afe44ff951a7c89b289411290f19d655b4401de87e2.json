{"ast":null,"code":"var _jsxFileName = \"/Users/anushree_j/Desktop/Web-D Assignments/JobWebsite/src/pages/CompanyShowcase.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Grid, Card, CardMedia, CardContent, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CompanyShowcase extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imagePaths: [],\n      // Store image paths fetched from the backend\n      error: null // Store any errors that occur during fetching\n    };\n  }\n  componentDidMount() {\n    // Fetch image paths from the backend\n    axios.get('http://localhost:8080/company/images').then(response => {\n      this.setState({\n        imagePaths: response.data\n      });\n      console.log(response.data);\n    }).catch(error => {\n      console.error('Error fetching image paths:', error);\n      this.setState({\n        error: 'Error fetching image paths'\n      });\n    });\n  }\n  render() {\n    const {\n      imagePaths,\n      error\n    } = this.state;\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../backendImages/1711490778607.png\",\n        alt: \"asdob\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","Grid","Card","CardMedia","CardContent","Typography","jsxDEV","_jsxDEV","CompanyShowcase","constructor","props","state","imagePaths","error","componentDidMount","get","then","response","setState","data","console","log","catch","render","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt"],"sources":["/Users/anushree_j/Desktop/Web-D Assignments/JobWebsite/src/pages/CompanyShowcase.js"],"sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Grid, Card, CardMedia, CardContent, Typography } from '@mui/material';\nexport default class CompanyShowcase extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            imagePaths: [], // Store image paths fetched from the backend\n            error: null // Store any errors that occur during fetching\n        };\n    }\n\n    componentDidMount() {\n        // Fetch image paths from the backend\n        axios.get('http://localhost:8080/company/images')\n            .then(response => {\n                this.setState({ imagePaths: response.data });\n                console.log(response.data);\n            })\n            .catch(error => {\n                console.error('Error fetching image paths:', error);\n                this.setState({ error: 'Error fetching image paths' });\n            });\n    }\n\n    render() {\n        const { imagePaths, error } = this.state;\n\n        if (error) {\n            return <div>Error: {error}</div>;\n        }\n\n        return (\n            <div>\n                <img src=\"../backendImages/1711490778607.png\" alt='asdob'/>\n                {/* <h2>Company Showcase</h2>\n                <Grid container spacing={2}>\n                    {imagePaths.map((imagePath, index) => (\n                        <Grid item xs={12} sm={6} md={4} lg={3} key={index}>\n                            <Card>\n                                <CardMedia\n                                    component=\"img\"\n                                    height=\"200\"\n                                    image={\"../backendImages/1711490778607.png\"} // Use absolute URL\n                                    alt={`Company ${index + 1}`}\n                                />\n                                <CardContent>\n                                    <Typography variant=\"subtitle1\">Company {index + 1}</Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid> */}\n            </div>\n        );\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/E,eAAe,MAAMC,eAAe,SAAST,SAAS,CAAC;EACnDU,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,UAAU,EAAE,EAAE;MAAE;MAChBC,KAAK,EAAE,IAAI,CAAC;IAChB,CAAC;EACL;EAEAC,iBAAiBA,CAAA,EAAG;IAChB;IACAd,KAAK,CAACe,GAAG,CAAC,sCAAsC,CAAC,CAC5CC,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACC,QAAQ,CAAC;QAAEN,UAAU,EAAEK,QAAQ,CAACE;MAAK,CAAC,CAAC;MAC5CC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACE,IAAI,CAAC;IAC9B,CAAC,CAAC,CACDG,KAAK,CAACT,KAAK,IAAI;MACZO,OAAO,CAACP,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,IAAI,CAACK,QAAQ,CAAC;QAAEL,KAAK,EAAE;MAA6B,CAAC,CAAC;IAC1D,CAAC,CAAC;EACV;EAEAU,MAAMA,CAAA,EAAG;IACL,MAAM;MAAEX,UAAU;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACF,KAAK;IAExC,IAAIE,KAAK,EAAE;MACP,oBAAON,OAAA;QAAAiB,QAAA,GAAK,SAAO,EAACX,KAAK;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IACpC;IAEA,oBACIrB,OAAA;MAAAiB,QAAA,eACIjB,OAAA;QAAKsB,GAAG,EAAC,oCAAoC;QAACC,GAAG,EAAC;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAmB1D,CAAC;EAEd;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}